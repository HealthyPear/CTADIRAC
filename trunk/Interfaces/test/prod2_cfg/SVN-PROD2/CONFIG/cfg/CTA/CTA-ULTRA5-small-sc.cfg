#ifndef HAVE_ULTRA5_COMMON
# include <CTA-ULTRA5-common.cfg>
#endif

#ifndef TELESCOPE
  echo
  echo Simulating an array of SC-SST telescopes (with CHEC-like MaPMT camera)
  trigger_telescopes = 1  % Not realistic but necessary for merging with other telescope types to maintain mixed stereo triggers.
# ifdef NUM_TELESCOPES
   % Need work-around for preprocessor comparison problem with underscores in variable names.
#  define NUMTEL $(NUM_TELESCOPES)
#  if NUMTEL > 96
    % Make sure that the 'ignore_telescopes' instruction is not used when simulating just a small sub-array.
#   ifndef SUBARRAY_EXTRACTED
     echo Ignoring all telescopes except for no. 97 to 168.
     ignore_telescopes 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96, 169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197
#   endif
#  endif
# endif
  echo Using new (i.e. fixed) majority threshold settings for SC-SST telescopes.
# define NEW_MAJORITY_THRESHOLDS 1
#endif

#ifdef TELESCOPE
echo
echo *******************************************************************
echo Configuration for SC-SST telescope $(TELESCOPE) in CTA-ULTRA5 setup
echo *******************************************************************
echo
#endif

#define TELESCOPE_TYPE 4

store_photoelectrons = 12 % Save individual photo-electrons

% ------------------------- Optical parameters --------------------------

mirror_class = 2

#ifdef V17OPTICS
primary_mirror_parameters = 0.000000 5.4280255e-04, 3.391288e-10, -1.345136e-13, 1.290003e-17, -6.850814e-22, 2.005972e-26, -3.056334e-31, 1.885330e-36
secondary_mirror_parameters = -356.1075 2.435033e-03, 3.879414e-08, -1.311115e-11, 2.883094e-15, -3.978197e-19, 3.337129e-23, -1.542123e-27, 2.987865e-32
focal_surface_param =305.03801,-0.005057

focal_length =228.3
mirror_list         = mirror_v17.dat

#else

primary_mirror_parameters = 0.,0.000608051,-7.36248e-10,5.82125e-15,-6.76447e-20,-3.89542e-24,-5.28036e-29,2.99107e-34,4.39153e-38,6.17433e-43,-2.73586e-47 
primary_ref_radius = 1
secondary_mirror_parameters = 310.84,0.00229358,2.8273e-08,-2.7689e-12,8.80066e-17,3.37315e-21,-1.02973e-25,-6.72882e-30,-3.06437e-34,3.1718e-38,-3.71217e-43 
secondary_ref_radius = 1
focal_surface_parameters = 258.88,-0.005,-1.25e-07,-6.25e-12,-3.90625e-16,-2.73438e-20,-2.05078e-24,-1.61133e-28,-1.3092e-32,-1.091e-36,-9.27353e-41
focal_surface_ref_radius = 1

focal_length =215.0
mirror_list         = mirror_astri.dat
primary_hole_diameter = 86.6

#endif

% Since primary/secondary mirrors are handled as one piece each, no random alignent errors are possible:

random_focal_length =            0.0 
mirror_reflection_random_angle = 0.0066 % Taken from prod-1 sims
mirror_align_random_distance   = 0.0 
mirror_align_random_horizontal = 0.0 
mirror_align_random_vertical   = 0.0

mirror_offset       = 0.     % 0.: Axes crossing at dish center.
focus_offset        = 0.0    % The star light is actually focused at the PMT surface 

mirror_reflectivity = ref_AlSiO2HfO2.dat % Better reflectivity than a new HESS-1 telescope
telescope_transmission = 0.90 % Guess

% Accuracy of the tracking and measurement of current direction.
telescope_random_angle         = 0.
telescope_random_error         = 0.

% -------------------------- Camera ------------------------------

camera_body_diameter =  35.0 % not sure what the diameter of the final design is

#ifdef V17OPTICS
camera_config_file   = camera_CHEC_GATE.dat % With true MaPMT pixel size
#else
camera_config_file   = camera_CHEC.dat % With pixel size rescaled for same angular scale as on v17 optics.
#endif
camera_pixels        = 2048  % needs to be specified explicitly

% quantum_efficiency =maPMTsBiQE.dat %super bialkali maPMT % JIM & RICH should I ask David Williams for his results?
quantum_efficiency=qe_h10966a-100.dat
pm_photoelectron_spectrum = spe_CHEC.dat

transit_time_jitter  = 0.2  % PMT single p.e. transit time jitter [ns].

gain_variation = 0.2
qe_variation = 0.04  % (not calibrated out by default!)

min_photons = 100            % With fewer photons don't waste CPU time.
min_photoelectrons = 10      % Usually, more than 60 p.e. are required.

nightsky_background = all: 0.012 
# ifdef TWICE_NSB
   nightsky_background = all: 0.024 
# endif
# ifdef THREEFOLD_NSB
   nightsky_background = all: 0.036 
# endif

% --------------------------- Trigger -----------------------------------

% The trigger simulation is over a slightly larger time window than FADC signals.
disc_bins = 40  % Number of time intervals simulated for trigger.  % JIM & RICH
disc_start = 3  % How many intervals the trigger simulation starts before the ADC.  % JIM & RICH

% Majority & analog sum input pulses:
discriminator_pulse_shape=disc_shape_CHEC.dat %Remake this plot
discriminator_amplitude = 20. % Changed to make a round number

% Discriminator threshold (and corresponding multiplicity for telescope trigger):
trigger_pixels = 2             % This means actually a level of 1.5 pixels.
#ifdef NEW_MAJORITY_THRESHOLDS
  discriminator_threshold = 175.4 % mV on average (8.77 mean p.e., NSB(2x) = 1.5*proton rate)
# ifdef TWICE_NSB
   trigger_pixels = 2             % This means actually a level of 1.5 pixels.
   discriminator_threshold = 209 % mV on average (10.45 mean p.e., NSB(3x) = 1.5*proton rate)
# endif
# ifdef THREEFOLD_NSB
   trigger_pixels = 3             % This means actually a level of 2.5 pixels.
   discriminator_threshold = 167.2 % mV on average (8.36 mean p.e., NSB(4x) = 1.5*proton rate)
# endif
#else
# ifdef TWICE_NSB
  echo Using multiplicity-2 thresholds of 155 mV - known to be too low - for compatibility reasons.
  discriminator_threshold = 155 % mV on average (7.75 mean p.e., NSB(2x) = 1.5*proton rate) - would be matching mult. 3!!
# else
#  if THREEFOLD_NSB
  echo Using multiplicity-2 thresholds of 172 mV - known to be too low - for compatibility reasons.
  discriminator_threshold = 171.8 % mV on average (8.59 mean p.e., NSB(2x) = 1.5*proton rate) - would be matching mult. 3!!
#  else
  echo Using multiplicity-2 thresholds of 126.4 mV - known to be too low - for compatibility reasons.
  discriminator_threshold = 126.4 % mV on average (6.32 mean p.e., NSB(2x) = 1.5*proton rate) - would be matching mult. 3!!
#  endif
# endif
#endif
discriminator_var_threshold = 2 % mV channel-to-channel variation

% Discriminator switching parameters:
discriminator_time_over_threshold    = 0.5
discriminator_var_time_over_threshold= 0
discriminator_sigsum_over_threshold  = 0 % pVs
discriminator_var_sigsum_over_threshold  = 0 % pVs
discriminator_hysteresis             = 0.0 % mV

% Outputs from pixel 'logic':
discriminator_gate_length            = 10.0  % 
discriminator_var_gate_length        = 0
discriminator_output_amplitude   =     42  % mV
discriminator_output_var_percent = 5       % is 10% for HESS
discriminator_rise_time = 0.5              % is 1ns for HESS
discriminator_fall_time = 0.5              % is 1ns for HESS

% Telescope trigger (see also 'trigger_pixels' above):
default_trigger = Majority
teltrig_min_time                       0.5 % ns
teltrig_min_sigsum                     0.0 % pV.s

trigger_delay_compensation = 0,0,0

% only_triggered_arrays=0
only_triggered_telescopes=1

% ------------------------------ Readout --------------------------------

% Sampling rate in MHz:
fadc_mhz = 333 % MHz sampling rate

fadc_pulse_shape = pulse_CHEC.dat 

% Read-out of a 75 ns window (within simulated 105 ns) following the actual trigger:
fadc_bins = 35  % Number of time intervals simulated for ADC.  % JIM & RICH
fadc_sum_bins = 25   % Number of ADC time intervals actually summed up. % JIM & RICH
fadc_sum_offset = 8  % How many intervals summation starts before telescope trigger.  % JIM & RICH

fadc_pedestal = 20          % Per time slice (positive signals only: unsigned!)
fadc_amplitude = 4          % The peak amplitude in a time slice for high gain.
fadc_noise = 1.6             % Again per time slice (high gain).

#ifdef WITH_LOW_GAIN_CHANNEL
  echo
  Error Using a dual-gain configuration instead of a single gain channel per pixel.
  echo 
  fadc_lg_amplitude = 0.4      % The peak amplitude in a time slice for low gain.
  fadc_lg_noise = 0.8          % Again per time slice (low gain).
#endif

% ----------------------------- Analysis --------------------------------

% Pulse shape analysis with pulse sum around global peak
% position only for significant pixels.
pulse_analysis = -6 %?
# ifdef TWICE_NSB
   pulse_analysis = -9
# endif
# ifdef THREEFOLD_NSB
   pulse_analysis = -11
# endif

% Pulse analysis provides a conditional 27 ns integration at 333 MHz sampling rate.
sum_before_peak = 3
sum_after_peak = 5

tailcut_scale = 1.0
# ifdef TWICE_NSB
   tailcut_scale = 1.4
# endif
# ifdef THREEFOLD_NSB
   tailcut_scale = 1.7
# endif

