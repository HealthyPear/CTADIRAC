#ifndef HAVE_ULTRA5_COMMON
# include <CTA-ULTRA5-common.cfg>
#endif

echo
echo ************************************************************************
echo Configuration for medium-size telescope $(TELESCOPE) in CTA-ULTRA5 setup
echo ************************************************************************
echo

#define TELESCOPE_TYPE 2

store_photoelectrons = 26 % Save individual photo-electrons

% ------------------------- Optical parameters --------------------------

parabolic_dish      = 0        % Intermediate shape (mirrors on spherical dish).
focal_length        = 1600     % Effective focal length for camera.
mirror_focal_length = 1607     % One fixed focal length despite spherical intermediate dish.
dish_shape_length   = 1920     % Intermediate shape R=1.2*f (sigma_t <= 0.7 ns).

#ifdef PERFECT_DISH
  % If all mirrors are just perfect:
  random_focal_length            = 0.
  mirror_reflection_random_angle = 0.0
  mirror_align_random_distance   = 0.0
  mirror_align_random_horizontal = 0.0,0.,0.,0.
  mirror_align_random_vertical   = 0.0,0.,0.,0.
#else
  % Better try to use a realistic configuration (so far still from HESS-1):
  random_focal_length =            7.4 % cm
  mirror_reflection_random_angle = 0.0066 % deg.
  mirror_align_random_distance   = 2.0 % cm
  mirror_align_random_horizontal = 0.0035,28.,0.023,0.0
  mirror_align_random_vertical   = 0.0034,28.,0.010,0.0
#endif

mirror_list         = mirror_CTA-100_1.20-84-0.02.dat
mirror_offset       = 0.       % 0.: Axes crossing at dish center.
focus_offset        = 2.56     % 1./(1./1600.-1./10.e5)-1600.

mirror_reflectivity = ref_AlSiO2HfO2.dat % Better reflectivity than a new HESS-1 telescope
telescope_transmission = 0.88  % Shadowing only - for plexiglass see camera_transmission

% Accuracy of the tracking and measurement of current direction.
telescope_random_angle         = 0.
telescope_random_error         = 0.

% -------------------------- Camera ------------------------------

camera_body_diameter = 250   % cm (only for shadowing)

camera_config_file   = camera_CTA-LST+MST_1855.dat % one size fits both ?
#ifdef ONLY_MAJORITY
camera_config_file   = camera_CTA-LST+MST_1855_majority.dat % one size fits both ?
#define NO_ANALOG_SUM 1
#define NO_DIGITAL_SUM 1
#endif
#ifdef ONLY_ANALOG_SUM
camera_config_file   = camera_CTA-LST+MST_1855_analogsum.dat % one size fits both ?
#define NO_MAJORITY 1
#define NO_DIGITAL_SUM 1
#endif
#ifdef ONLY_DIGITAL_SUM
camera_config_file   = camera_CTA-LST+MST_1855_digitalsum.dat % one size fits both ?
#define NO_MAJORITY 1
#define NO_ANALOG_SUM 1
#endif
% camera_config_file   = camera_CTA_LST_1855pixels.dat % similar but different trigger groups
camera_transmission = 0.8956 % By plexiglass window only (mean impact on Cherenkov spectrum)
camera_pixels        = 1855  % needs to be specified explicitly
#include <pmt_specs_R11920.cfg>

min_photons = 125            % With fewer photons don't waste CPU time.
min_photoelectrons = 12      % Usually, more than 60 p.e. are required.

% NSB scaled from 0.100 for HESS with geometrical factor 
%   (103.9/106.4) * (4.9/4.1)**2 * (15.0/16.0)**2 * (0.88/0.89) = 1.21209
% and spectral factor 
%   128.474/88.284 = 1.4552 for Aar, 134.320/88.284 = 1.52145 for Leoncito
% of a telescope with Al(SiO2HfO2) coated mirrors, plexiglass window, HESS-like funnels, R11920 PMTs.

nightsky_background = all:0.1844 % for Leoncito site candidate
# ifdef TWICE_NSB
   nightsky_background = all:0.3688 % for Leoncito site candidate (factor 2)
# endif
# ifdef THREEFOLD_NSB
   nightsky_background = all:0.5532 % for Leoncito site candidate (factor 3)
# endif

#ifdef ATMOSPHERE_AAR
nightsky_background = all:0.1764 % for Aar site candidate
# ifdef TWICE_NSB
   nightsky_background = all:0.3528 % for Aar site candidate (factor 2)
# endif
# ifdef THREEFOLD_NSB
   nightsky_background = all:0.5292 % for Aar site candidate (factor 3)
# endif
#endif

% --------------------------- Trigger -----------------------------------

% The trigger simulation is over a slightly larger time window than FADC signals.
disc_bins = 50  % Number of time intervals simulated for trigger.
disc_start = 3  % How many intervals the trigger simulation starts before the ADC.

% The camera config file has majority, analog sum, plus digital sum.
#ifndef NO_ANALOG_SUM
# define ANALOG_SUM 1
#endif
#ifndef NO_DIGITAL_SUM
# define DIGITAL_SUM 1
#endif

% Majority & analog sum input pulses:
discriminator_pulse_shape=pulse_CTA-Fx.dat % 2.9 ns FWHM + 300 MHz bandwidth -> 3.1 ns FWHM
discriminator_amplitude = 20. % mV for mean p.e. amplitude

% Discriminator threshold (and corresponding multiplicity for telescope trigger):
trigger_pixels = 3             % This means actually a level of 2.5 pixels.
#ifdef NEW_MAJORITY_THRESHOLDS
  discriminator_threshold = 134.6 % mV on average (6.73 mean p.e., NSB(2x) = 1.5*proton rate) at trigger_pixels = 3
#else
  discriminator_threshold = 134.8 % mV on average (6.74 mean p.e., NSB(2x) = 1.5*proton rate)
#endif
#ifdef TWICE_NSB
   discriminator_threshold = 157.6 % mV on average (7.88 mean p.e., NSB(3x) = 1.5*proton rate) at trigger_pixels = 3
#endif
#ifdef THREEFOLD_NSB
   discriminator_threshold = 180.8 % mV on average (9.04 mean p.e., NSB(4x) = 1.5*proton rate) at trigger_pixels = 3
#endif
discriminator_var_threshold = 5 % mV channel-to-channel variation

% Discriminator switching parameters:
discriminator_time_over_threshold    = 0.5
discriminator_var_time_over_threshold= 0
discriminator_sigsum_over_threshold  = 0 % pVs
discriminator_var_sigsum_over_threshold  = 0 % pVs
discriminator_hysteresis             = 4.8 % mV

% Outputs from pixel 'logic':
discriminator_gate_length            = 6.0
discriminator_var_gate_length        = 0
discriminator_output_amplitude   =     42  % mV
discriminator_output_var_percent = 5       % is 10% for HESS
discriminator_rise_time = 0.5              % is 1ns for HESS
discriminator_fall_time = 0.5              % is 1ns for HESS

% Telescope trigger (specified even if no majority trigger is used):
default_trigger = Majority
teltrig_min_time                       0.5 % ns
teltrig_min_sigsum                     7.8 % pV.s

trigger_delay_compensation = 0,-1,3

#ifdef ANALOG_SUM
   echo Analog sum trigger threshold depends on DC subtraction (2013-04-28 and newer sim_telarray)
%  default_trigger = AnalogSum
%  asum_threshold = 1400 % mV (70.0 "mean" p.e. for NSB(2*) = 1.5*proton rate) % Without DC subtraction
  asum_threshold = 817 % mV (40.9 "mean" p.e. for NSB(2*) = 1.5*proton rate)
  asum_clipping = 400 % mV (20 "mean" p.e.)
# ifdef TWICE_NSB
%  asum_threshold = 1792 % mV (89.6 "mean" p.e. for NSB(3*) = 1.5*proton rate) % Without DC subtraction
  asum_threshold = 933 % mV (48.9 "mean" p.e. for NSB(2*) = 1.5*proton rate)
  asum_clipping = 400 % mV (20 "mean" p.e.)
# endif
# ifdef THREEFOLD_NSB
%  asum_threshold = 2162 % mV (108.1 "mean" p.e. for NSB(4*) = 1.5*proton rate) % Without DC subtraction
  asum_threshold = 1037 % mV (51.8 "mean" p.e. for NSB(2*) = 1.5*proton rate)
  asum_clipping = 400 % mV (20 "mean" p.e.)
# endif
  % asum_shaping_file = CTA-ULTRA5-asum_shaping.dat
  asum_shaping_file = none % No further shaping needed - pulse is wide enough.
  asum_offset = 0.0
#endif

#ifdef DIGITAL_SUM
%  default_trigger = DigitalSum
# ifdef OLD_DSUM_THRESHOLD
  % dsum_threshold = 390 % ADC counts (39 "mean" p.e. for 100 Hz on dark NSB)
  dsum_threshold = 436 % ADC counts (43.6 "mean" p.e. for NSB(2*) = 1.5*proton rate)
  dsum_clipping = 100 % ADC counts (10.0 "mean" p.e.)
# else
  dsum_threshold = 465 % ADC counts (46.5 "mean" p.e. for NSB(2*) = 1.5*proton rate)
  dsum_clipping = 200 % ADC counts (20.0 "mean" p.e.)
# endif
# ifdef TWICE_NSB
  dsum_threshold = 540 % ADC counts (54.0 "mean" p.e. for NSB(2*) = 1.5*proton rate)
  dsum_clipping = 200 % ADC counts (20.0 "mean" p.e.)
# endif
# ifdef THREEFOLD_NSB
  dsum_threshold = 605 % ADC counts (60.5 "mean" p.e. for NSB(2*) = 1.5*proton rate)
  dsum_clipping = 200 % ADC counts (20.0 "mean" p.e.)
# endif
  % dsum_shaping_file = CTA-ULTRA5-dsum_shaping.dat
  dsum_shaping_file = none % No further shaping needed - pulse is more or less OK.
  dsum_offset = 0.0
#endif

% only_triggered_arrays=0
only_triggered_telescopes=1

% ------------------------------ Readout --------------------------------

% Sampling rate in MHz:
fadc_MHz = 500 % MHz sampling rate

fadc_pulse_shape = pulse_CTA-M.dat % Medium sampling pulse shape

% Read-out of a 60 ns window (within simulated 90 ns) following the actual trigger:
fadc_bins = 45       % Number of time intervals simulated for ADC.
fadc_sum_bins = 30   % Number of ADC time intervals actually summed up.
fadc_sum_offset = 6  % How many intervals summation starts before telescope trigger.

fadc_pedestal = 100          % Per time slice (positive signals only: unsigned!)
fadc_amplitude = 10.0        % The peak amplitude in a time slice for high gain.
fadc_noise = 3.0             % Again per time slice (high gain).

#ifdef WITH_LOW_GAIN_CHANNEL
  echo
  Error Using a dual-gain configuration instead of a single gain channel per pixel.
  echo 
  fadc_lg_amplitude = 1.0      % The peak amplitude in a time slice for low gain.
  fadc_lg_noise = 1.0          % Again per time slice (low gain).
#endif

% ----------------------------- Analysis --------------------------------

% Pulse shape analysis with pulse sum around global peak
% position only for significant pixels.
pulse_analysis = -26
# ifdef TWICE_NSB
   pulse_analysis = -36
# endif
# ifdef THREEFOLD_NSB
   pulse_analysis = -45
# endif

% Pulse analysis provides a conditional 14 ns integration at 500 MHz sampling rate.
sum_before_peak = 3
sum_after_peak = 3

tailcut_scale = 1.8 % For built-in image cleaning
# ifdef TWICE_NSB
   tailcut_scale = 2.5
# endif
# ifdef THREEFOLD_NSB
   tailcut_scale = 3.1
# endif

